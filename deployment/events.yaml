apiVersion: argoproj.io/v1alpha1
kind: EventBus
metadata:
  namespace: geekembly
  name: default
spec:
  nats:
    native:
      # Optional, defaults to 3. If it is < 3, set it to 3, that is the minimal requirement.
      replicas: 3
      # Optional, authen strategy, "none" or "token", defaults to "none"
      auth: token
---
apiVersion: argoproj.io/v1alpha1
kind: EventSource
metadata:
  namespace: geekembly
  name: github
spec:
  eventBusName: default
  service:
    ports:
      - port: 12000
        targetPort: 12000
  github:
    geekembly:
      repositories:
        - owner: cih2001
          names:
            - geekembly
      webhook:
        endpoint: /push
        port: "12000"
        method: POST
        url: https://github.geekembly.com
      # type of events to listen to.
      # following listens to everything, hence *
      # You can find more info on https://developer.github.com/v3/activity/events/types/
      events:
        - "*"
      apiToken:
        name: github-access
        key: token
      webhookSecret:
        name: github-access
        key: secret
      insecure: false
      active: true
      contentType: json
---
apiVersion: argoproj.io/v1alpha1
kind: Sensor
metadata:
  name: github
  namespace: geekembly
spec:
  template:
    serviceAccountName: default
  dependencies:
    - name: github-dep
      eventSourceName: github
      eventName: geekembly
      filters:
        data:
          # Type of Github event that triggered the delivery: [pull_request, push, issues, label, ...]
          # https://docs.github.com/en/developers/webhooks-and-events/webhook-events-and-payloads
          - path: headers.X-Github-Event
            type: string
            value:
              - push
  triggers:
    - template:
        name: github-workflow-trigger
        k8s:
          operation: create
          source:
            resource:
              apiVersion: argoproj.io/v1alpha1
              kind: Workflow
              metadata:
                generateName: prod-ci-workflow-
                namespace: geekembly
              spec:
                volumeClaimTemplates:
                  - metadata:
                      name: workspace
                    spec:
                      accessModes: ["ReadWriteOnce"]
                      resources:
                        requests:
                          storage: 200Mi
                volumes:
                  - name: ssh-vol
                    secret:
                      secretName: github-ssh-key
                  - name: docker-vol
                    secret:
                      secretName: regcred
                entrypoint: main
                templates:
                  - name: main
                    steps:
                      - - name: ci-step
                          templateRef:
                            name: prod-ci
                            template: start
                      - - name: cd-step
                          templateRef:
                            name: prod-cd
                            template: start
                          arguments:
                            parameters:
                              - name: push-skipped
                                value: "{{steps.ci-step.outputs.parameters.push-skipped}}"
                              - name: release-tag
                                value: "{{steps.ci-step.outputs.parameters.release-tag}}"

                      # parameters:
                      #   - src:
                      #       dependencyName: github-dep
                      #       dataKey: body.pull_request.title
                      #     dest: spec.arguments.parameters.0.value
                      #   - src:
                      #       dependencyName: github-dep
                      #       dataKey: body.pull_request.number
                      #     dest: spec.arguments.parameters.1.value
                      #   - src:
                      #       dependencyName: github-dep
                      #       dataTemplate: "{{ .Input.body.pull_request.head.sha | substr 0 7 }}"
                      #     dest: spec.arguments.parameters.2.value
                      #   # Append pull request number and short sha to dynamically assign workflow name <github-21500-2c065a>
                      #   - src:
                      #       dependencyName: github-dep
                      #       dataTemplate: "{{ .Input.body.pull_request.number }}-{{ .Input.body.pull_request.head.sha | substr 0 7 }}"
                      #     dest: metadata.name
                      #     operation: append
      retryStrategy:
        steps: 3
