apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  namespace: geekembly
  generateName: prod-cd-
spec:
  volumeClaimTemplates:
    - metadata:
        name: workspace
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 200Mi
  volumes:
    - name: ssh-vol
      secret:
        secretName: github-ssh-key
  entrypoint: start
  arguments:
    parameters:
      - name: push-skipped
        value: "true"
      - name: release-tag
        value: latest
        # value: "074d2936a31928483da4f0ec888a53c882e38a9b"

  templates:
    - name: argocd-sync-and-wait
      inputs:
        parameters:
          - name: argocd-version
            value: v1.6.0
          - name: application-name
          - name: revision
            value: HEAD
          - name: flags
            description: additional flags to pass to argocd
            value: --
          - name: argocd-server-address
          - name: argocd-credentials-secret
      script:
        image: argoproj/argocd:{{inputs.parameters.argocd-version}}
        command: [bash]
        env:
          - name: ARGOCD_AUTH_TOKEN
            valueFrom:
              secretKeyRef:
                name: "{{inputs.parameters.argocd-credentials-secret}}"
                key: token
                optional: true
          - name: ARGOCD_SERVER
            value: "{{inputs.parameters.argocd-server-address}}"
        source: |
          #!/bin/bash

          set -euo pipefail

          if [ -z $ARGOCD_AUTH_TOKEN ]; then
            echo "ARGOCD_AUTH_TOKEN must be specified."
            exit 1
          fi 

          echo "Running as ArgoCD User:"
          argocd account get-user-info {{inputs.parameters.flags}}

          argocd app sync {{inputs.parameters.application-name}} --revision {{inputs.parameters.revision}} {{inputs.parameters.flags}}
          argocd app wait {{inputs.parameters.application-name}} --health {{inputs.parameters.flags}}

    - name: update-deployment-tag
      inputs:
        parameters:
          - name: deployment-dir
          - name: release-tag
          - name: git-user
            value: release-bot
          - name: git-email
            value: release@bot.com
          - name: branch
            value: main
      script:
        image: bitnami/git
        command: [sh]
        source: |
          #!/bin/bash

          set -eu

          mkdir -p /root/.ssh
          cp /github/id_rsa /root/.ssh/
          chmod 600 /root/.ssh/id_rsa
          touch /root/.ssh/known_hosts && ssh-keyscan github.com >> /root/.ssh/known_hosts

          cd {{inputs.parameters.deployment-dir}}

          echo BEFORE:
          cat kustomization.yaml

          echo AFTER:
          cat kustomization.yaml | sed -e 's@newTag.*@newTag: "{{inputs.parameters.release-tag}}"@g'| tee kustomization.yaml

          git config user.name "{{inputs.parameters.git-user}}"
          git config user.email "{{inputs.parameters.git-email}}"
          git checkout {{inputs.parameters.branch}}
          git pull
          git add kustomization.yaml
          git commit -m "updated deployment with the release-tag {{inputs.parameters.release-tag}}"
          git push -u origin {{inputs.parameters.branch}} -f

        volumeMounts:
          - name: workspace
            mountPath: /workspace
          - name: ssh-vol
            mountPath: /github

    - name: github-clone
      script:
        image: bitnami/git:latest
        command: [sh]
        source: |
          #!/bin/bash
          mkdir -p /root/.ssh
          cp /github/id_rsa /root/.ssh/
          chmod 600 /root/.ssh/id_rsa
          touch /root/.ssh/known_hosts && ssh-keyscan github.com >> /root/.ssh/known_hosts

          cd /workspace
          git clone git@github.com:Cih2001/geekembly.git

        volumeMounts:
          - name: workspace
            mountPath: /workspace
          - name: ssh-vol
            mountPath: /github

    - name: start
      inputs:
        parameters:
          - name: push-skipped
          - name: release-tag
      dag:
        tasks:
          - name: github-clone-task
            template: github-clone
          - name: update-deployment-tag-task
            template: update-deployment-tag
            dependencies: [github-clone-task]
            arguments:
              parameters:
                - name: deployment-dir
                  value: /workspace/geekembly/deployment
                - name: release-tag
                  value: "{{inputs.parameters.release-tag}}"
            when: "{{inputs.parameters.push-skipped}} == false"
          - name: argocd-sync-and-wait-task
            template: argocd-sync-and-wait
            dependencies: [update-deployment-tag-task]
            arguments:
              parameters:
                - name: application-name
                  value: geekembly.com
                - name: deployment-name
                  value: geekembly-dpl
                - name: argocd-server-address
                  value: argocd-server.argocd
                - name: argocd-credentials-secret
                  value: argocd-cred
                - name: flags
                  value: --insecure
