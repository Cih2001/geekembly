apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  namespace: geekembly
  generateName: prod-cd-
spec:
  entrypoint: start
  arguments:
    parameters:
      - name: push-skipped
        value: "false"
      - name: release-tag
        value: "074d2936a31928483da4f0ec888a53c882e38a9b"

  templates:
    - name: argocd-sync-and-wait
      inputs:
        parameters:
          - name: argocd-version
            value: v1.6.0
          - name: application-name
          - name: revision
            value: HEAD
          - name: flags
            description: additional flags to pass to argocd
            value: --
          - name: argocd-server-address
          - name: argocd-credentials-secret
      script:
        image: argoproj/argocd:{{inputs.parameters.argocd-version}}
        command: [bash]
        env:
          - name: ARGOCD_AUTH_TOKEN
            valueFrom:
              secretKeyRef:
                name: "{{inputs.parameters.argocd-credentials-secret}}"
                key: token
                optional: true
          - name: ARGOCD_SERVER
            value: "{{inputs.parameters.argocd-server-address}}"
        source: |
          #!/bin/bash

          set -euo pipefail

          if [ -z $ARGOCD_AUTH_TOKEN ]; then
            echo "ARGOCD_AUTH_TOKEN must be specified."
            exit 1
          fi 

          echo "Running as ArgoCD User:"
          argocd account get-user-info {{inputs.parameters.flags}}

          argocd app sync {{inputs.parameters.application-name}} --revision {{inputs.parameters.revision}} {{inputs.parameters.flags}}
          argocd app wait {{inputs.parameters.application-name}} --health {{inputs.parameters.flags}}

    - name: print-message
      inputs:
        parameters:
          - name: message
      container:
        image: alpine:latest
        command: [sh, -c]
        args: ["echo result was: {{inputs.parameters.message}}"]

    - name: update-deployment-tag
      steps:
        - - name: print-message-step
            template: print-message
            arguments:
              parameters:
                - name: message
                  value: hello

    - name: start
      inputs:
        parameters:
          - name: push-skipped
          - name: release-tag
      dag:
        tasks:
          - name: update-deployment-tag-task
            template: update-deployment-tag
            when: "{{inputs.parameters.push-skipped}} == false"
